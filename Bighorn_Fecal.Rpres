
========================================================
## The Importance of Low  
## Altitude Mineral Licks

author: Travis Guy

*******
![rams](rams.png)

A touch of background
========================================================

![mummy_mt](mummy.png)

*****

Mummy Range: Where the bighorn sheep raise their lambs

===================================

![sheep_lakes](sheeplakes.png)

*****

Horeseshoe Park and Sheep Lakes: Salt lick the bighorn visit during mid-summer

========================================================

![sheep_crossing](http://www.nps.gov/romo/images/brigade_cross_lg.jpg)

A busy highway cuts between the mummy range and sheep lakes


===============================================

> fecal_wild_bighorn <- droplevels(subset(bighorn, bighorn$biomass=="fecal" & bighorn$status=="wild" ))

As I have nutritional data for domesticated bighorn sheep and vegetation, I subset my data so that 
I am only dealing with wild bighorn and fecal nutrient values

===============================================
Example slide with code:

- This will show the code and the output on the slide

```{r}
rnd1 <- rnorm(100, 2, 0.5)
rnd2 <- rnorm(100, 1.5, 0.5)
t.test(rnd1, rnd2)
```

===============================================
Example slide with code:

- This will not show the code but will show the output

```{r, echo=FALSE}
rnd1 <- rnorm(100, 2, 0.5)
rnd2 <- rnorm(100, 1.5, 0.5)
t.test(rnd1, rnd2)
```

===============================================
Example slide with code:

- This will only show the code

```{r, echo=TRUE, results='hide'}
rnd1 <- rnorm(100, 2, 0.5)
rnd2 <- rnorm(100, 1.5, 0.5)
t.test(rnd1, rnd2)
```

===============================================
Example slide with code:

- This will not show anything on the slide

```{r, echo=FALSE, results='hide'}
rnd1 <- rnorm(100, 2, 0.5)
rnd2 <- rnorm(100, 1.5, 0.5)
t.test(rnd1, rnd2)
```

- but you can use the code for a plot

```{r, echo=FALSE}
boxplot(rnd1)
```

===============================================
## some basic summary statistics

### Mean post (for P)
> mean(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "Post"])  

### Mean pre (for P)
> mean(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "pre"])


===============================================
##  some basic summary statistics

### standard deviation for post and pre (for P)
> sd(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "Post"]) 

> sd(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "pre"]) 



==========================================

##  some basic summary statistics

### standard error for post and pre (for P)


> sd(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "Post"])/   
  sqrt(length(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "Post"]))

> sd(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "pre"])/ 
  sqrt(length(fecal_wild_bighorn$P[fecal_wild_bighorn$SEASON == "pre"]))
  
  
===========================================
## T-test (for P)

> t.test(fecal_wild_bighorn$P~fecal_wild_bighorn$SEASON)

==========================================
## writing a function for summary stats: mean

with 17 minerals, summary stats for each would get tedious

> fecal_mean <- function(mineral, season, dat = fecal_wild_bighorn)  {  
  mean_prepost <- mean(dat[dat$SEASON == season, mineral]) 
  
>  return(mean_prepost)  
> }  

> fecal_mean(mineral = "Fe", season = "pre")  
> fecal_mean(mineral = "Fe", season = "Post")

==========================================
## writing a function for summary stats: st. dev

> fecal_sd <- function(mineral, season, dat = fecal_wild_bighorn){
>   sd_prepost <- sd(dat[dat$SEASON == season, mineral])
  
>  return(sd_prepost)
}

> fecal_sd(mineral = "Fe", season = "Post")  
> fecal_sd(mineral = "Fe", season = "pre")


==========================================
## writing a function for summary stats: st. error

> fecal_se <- function(mineral, season, dat = fecal_wild_bighorn){
>  se_prepost <- sd(dat[dat$SEASON == season, mineral])/
 >   sqrt(length(dat[dat$SEASON == season, mineral]))
  
>  return(se_prepost)
}

> fecal_se(mineral = "Fe", season = "Post")  
> fecal_se(mineral = "Fe", season = "pre")

==========================================
## writing a function for a t-test

> fecal_ttest <- function(mineral, dat = fecal_wild_bighorn) {
  
>  ttest <- t.test(dat[,mineral]~dat$SEASON)
 
> return(ttest)
}

> fecal_ttest(mineral = "Fe")

==========================================
## writing a function for box plots

> fecal_boxplot <- function(mineral, dat = fecal_wild_bighorn){
  box <- boxplot(dat[dat$SEASON == "Post", mineral],
                 (dat[dat$SEASON == "pre", mineral]))
  return(box)
}

> fecal_boxplot(mineral = 'Fe')


==========================================
## Bar Plots
A bit tricky doing bar plots

first melt my data so all the minerals are in one column

> bighorn_melt <-melt(fecal_wild_bighorn, measure.vars = 10:25, variable.name="mineral")

then create summary values for error bars

> bighorn_summary <- bighorn_melt %>% group_by(SEASON, mineral) %>%   
  summarize(mean_mineral = mean(value), ymin = mean(value)-sd(value)/sqrt(n()),  
            ymax = mean(value) + sd(value)/sqrt(n()))

==========================================
## Bar Plots

> ggplot(subset(bighorn_summary, mineral == "K"), aes (x = SEASON, y = mean_mineral)) + 
  geom_point(colour = "blue") + geom_bar(stat="identity", fill="olivedrab2") + 
  facet_wrap(~mineral) + geom_errorbar( aes(ymin = ymin, ymax = ymax, width = 0.25))

==========================================
## Bar Plots
a function to make it easier to make plots for all minerals

> fecal_barplot <- function(nutrient, bdat = bighorn_summary){
  f_bar <-ggplot(subset(bdat, mineral == nutrient), aes (x = SEASON, y = mean_mineral)) +
    geom_bar(stat = "identity", fill="olivedrab2") + facet_wrap(~mineral) + 
    geom_errorbar( aes(ymin = ymin, ymax = ymax, width =0.3))
  return(f_bar)
}

> fecal_barplot(nutrient = "Fe")

==========================================
Thank Ewe

![lambs_ewe](lambs_ewe.png)


==========================================
```{}
summary(cars)
```

Slide With Plot
========================================================

```{r, echo=FALSE}
plot(cars)
```
